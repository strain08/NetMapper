<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAQAAAAIAAAACAAAAAwAAAAMAAAACAAAAAgAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAEAAAABgAA
        AAkAAAAMAAAADgAAABAAAAASAAAAEwAAABQAAAAVAAAAFQAAABUAAAAVAAAAFAAAABIAAAAQAAAADgAA
        AAoAAAAHAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAUAAAAJAAAADQAA
        ABEAAAAUAAAAGAAAABsAAAAeAAAAIQAAACQAAAAlAAAAJwAAACgAAAAoAAAAKQAAACkAAAAoAAAAJwAA
        ACYAAAAjAAAAIAAAABwAAAAYAAAAEgAAAAwAAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAQAAAAJAAAADgAA
        ABMAAAAXAAAAHAAAACAAAAAkAAAAKAAAACoAAAAsAAAALQAAAC8AAAAwAAAAMQAAADIAAAAzAAAAMwAA
        ADMAAAAyAAAAMgAAADAAAAAvAAAALQAAACoAAAAlAAAAHQAAABUAAAAMAAAAAwAAAAAAAAACAAAACAAA
        AA0AAAASAAAAGAAAAB0AAAAiAAAAJwAAACoAAAAtAAAALwAAADEAAAAyAAAANAAAADYAAAA4AAAAOQAA
        ADoAAAA7AAAAPAAAADwAAAA7AAAAOgAAADgAAAA1AAAAMgAAAC4AAAApAAAAIQAAABYAAAAKAAAAAQAA
        AAEAAAAGAAAADAAAABIAAAAXAAAAHQAAACMAAAAoAAAAKwAAAC0AAAAwAAAAMgAAADQAAAA3AAAAOQAA
        ADsAAAA9AAAAQAAAAEIAAABDAAAARAAAAEUAAABDAAAAPwAAADoAAAA2AAAAMAAAACsAAAAhAAAAFAAA
        AAcAAAAAAAAAAAAAAAEAAAAFAAAACntqaj6bj4y0npWSv56UksCck5DCnJOQwpuSj8OakY/EmpCOxZqQ
        jsWZkI3GmI+Mx5iPjMeXjozIlo6LyZaOi8mWjYrKlo2KypaOi8mXjozImZCNxpqQjsWbko/Dm5COwI+B
        fXIAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAp5uZxr+6uf/JxsX/ycXF/8jFxP/IxcT/yMXE/8jF
        xP/IxcT/yMXE/8jFxP/IxcT/x8TE/8fExP/HxMT/x8TE/8fExP/HxMT/yMTE/9TOzf/Ly8b/k72j/8LI
        wP/OyMf/q6Gf/qGMjCYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACroqDxnpaU/ycmJf8gHh7/Hx0c/x8d
        HP8eHBz/Hhwc/x0cG/8dHBv/HRsb/x0bG/8dGxr/HRsa/xwaGv8cGhr/HBoa/xsaGf8cGxr/i4OC/1eS
        bf8mq2L/QpVk/7ywrf+ooaD/r6OfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrCwL2UjYz/d29t/15Y
        V/9dWFb/XVhW/11YVv9dWFb/XVhW/11YVv9dWFb/XVhW/11YVv9dWFb/XVhW/11YVv9dWFb/XVhW/3Bo
        Z/+GfHr/e3hz/154Z/91d2//i4SC/8C5uP/AtrY1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxL+9iOTh
        4f/h3t7/4d7e/+He3v/i3t7/49/f/+Pg3//k4OD/5eHg/+bi4f/n4uL/6OPi/+nk4//q5OP/6+Xj/+zm
        5P/s5uX/7efl/+7n5v/v6Ob/7+jm/+rk4v/o5OP/4N7d/Z+UlBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC9tbVl5eTk/93b2//e3Nz/3Nvb/9ra2v/a2tn/29ra/9zb2//e3Nz/393c/+He3f/j397/5ODf/+bi
        4P/o4+L/6eTj/+vl5P/s5uX/7ufm//Do5//x6ef/6eLh/+jk5P/f3Nv8f39/AgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKWZlDzt6+v/6OXk/+vo5//p5ub/5+Xl/+Xj4//j4uL/4eHh/+Hh4f/j4uL/5OPj/+bk
        5P/o5eX/wN/g/7bb3f/t6ej/7urp//Dr6v/y7Ov/8+3s//Tu7P/t5+X/7urq/9/c2/MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAm5CFF+fj4/3r5ub/8Ovr/+7q6f/s6Oj/6ufn/+jm5f/m5OT/5OPj/+Li
        4v/h4eH/4uHh/5jf4/8SyNP/MsDI/+jm5f/q5+b/6+jn/+3p6P/v6un/8Ovp/+nk4//r6ej/3trZ2QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4dzb8e7o5//17u7/8+3t//Hs6//v6+r/7enp/+vo
        5//o08H/5tPC/4Tg5v8p3ej/ANzp/wDR3f8Avcj/mdTX/+bk4//n5eT/6ebl/+vn5v/s6Of/5OHg/+nn
        5//b2NjBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh2trG8Ono//nx8P/48fD/9vDv//Tu
        7v/x1cL/7ZhS/+iFKv/jjzr/pOLj/zjk7v8Y3+v/BNrn/wDI1P8fvsf/3eDh/+Pi4v/l4+P/5uTk/+fk
        5P/g3t3/5+bl/9fU07YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN/b2aPx6un//PPy//31
        9P/88/L/997O//SQSf/uiTf/6IUq/+GBHf/mu43/fenv/2Xq8f9A5e7/HNfi/yLFz//R3dr/4uHh/+Hh
        4f/i4eH/4uHh/9zb2v/l5OT/19TSnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2dPRe/Dp
        6P/78vH///b1///29f/86eD/9Zpa/++PQ//ohiz/4YEd/92GIv/G5N//ke/1/3zt8/9z5Ov/s93F/yqt
        MP/X3tb/5ePj/+Pi4v/g4OD/2NjY/+Pj4//S0M6EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADQx8dT7+no//nw7///9vX///b1///29f/4xJ7/8aNl/+qVR//ihyj/4ZM7/+/Ss/+y6u3/v+nV/33f
        gP8Nxhb/AK4I/2y+bv/q5+f/6Obl/+Tj4v/a2dn/4+Pj/87Jx3gAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALmvrzDt5+b/9+7t//719P//9vX///b1//3v6f/yrHP/8K1y/+nPxP+cq+f/j6Pn/8rg
        1f8O1Bj/AtMM/wDOCv8Augn/B6YP/9Lgz//t6en/6ebl/97b2//k4+P/x8LCYQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAqqqqCePc2/v17Oz//vX0///29f//9vX///b1//nQs//Ox9z/GEfW/xlI
        1/9Pc+D/orLr/4Hkgv8t2jb/ENUa/wHGC/8AsAj/Y75l//Lt7P/t6ej/4d7d/+Xj4/+/uLRIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3tfW4fLr6v/99PP///b1///29f//9vX///b1/2yH
        4f8mU9n/FUXW/zli3P9ui+X/zdzg/2PiaP9M31P/LNc0/yrEMP/R5Mv/+PHw//Ls6//k4N//4uDg/720
        tDoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY0dG68Ono//zz8v//9vX///b1///2
        9f//9vX/zM/u/1J24P88ZNz/Pmbc/15/4v+cruv/pOmi/3vlfv+i6aH/9vTs//719P/99PP/9u7u/+ji
        4f/e29v+wru1JgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANPMzJHu5+b/+/Lx///2
        9f//9vX///b1///29f//9vX/kaTo/2yK5f9bfOD/xcvu//Tu8///9vX///b1///29f//9vX///b1///2
        9f/58O//6uTj/9zX1/vMu7sPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0crHaubf
        3v/47+7///b1///29f//9vX///b1///29f/e3fD/cYzj//fw8///9vX///b1///29f//9vX///b1///2
        9f//9vX///b1//jw7//o4eD/19HQ9gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADRyMgc5t/f+/Lq6f/47+7/+O/u//jv7v/47+7/+O/u//jv7v/07O7/+O/u//jv7v/47+7/+O/u//jv
        7v/47+7/+O/u//jv7v/58O//8urp/+fg4P/Z0tKxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADWzMwy597cdezj4Yvv5eOg8OfmrvDo5rPx6Oe38ennuvHp57vx6ei98ejov/Lp
        6L3x5+e88ennu/Hn57vx5+a78ejnuPDn5a3p4d+Z3dTUbNS/vwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////4Af/+AAAH8AAAAOAAAABAAAAAAAAAAGAAAAD8AAAA/AA
        AAPwAAAD8AAAA/AAAAPwAAAH8AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAH+AAAB/gAAAf8AAAH/AAAB/wA
        AAf8AAAP/AAAD/4AAA////////////////8=
</value>
  </data>
  <metadata name="fileSystemWatcher1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>130, 17</value>
  </metadata>
</root>